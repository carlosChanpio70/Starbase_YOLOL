include "std/logic"
include "std/math"
define :Scan_Button = :SB
define :Display_1 = :SD1
define :Display_2= :SD2
define :Material = :M
define :Volume = :V
define :Index = :I
define :Scan_Results = :SR
define :Delay=:SDelay*5
define :Reset_Results = :RR

Delay = 0; Stack = 0$ //Turn on features here/ a is Delay mode, b is Stacks mode //
kv = "kv"
Ore = "Ore"
Crystal = "Crystal"
Stacks = "Stacks"
Line_Skip="\n"
Line_Skip2=Line_Skip+Line_Skip
P100 = 100
Stack_Size = 172800
if :Scanbutton==1 then
    //Handles Stack//
    if Stack then
        kv = Stacks
    end
    //Handles delay//
    If Delay then
        while Loop<=Delay do
            Loop=Loop+1
        end
        Loop=0
    end
    //Handles main Scan logic//
    while :Scan_Results==0 do
        :Scan = 1
    end
    if :Scan_Results==0 then
        Display_1 = Line_Skip*2+"No Target"
        Display_2 = Display_1
    end
    if :Scan_Results then
        :Index=0
        M1 = (:Material-Ore-Crystal)
        V1 = :Volume
        if Stack then
            V1 = V1/Stack_Size*P100
        end
        Display_1=M1+Line_Skip+V1+kv
        if :Scan_Results>=1 then
            :Index=1
            M2 = (:Material-Ore-Crystal)
            V2 = :Volume
            if Stack then
                V2 = V2/Stack_Size*P100
            end
            Display_1 = Display_1+Line_Skip+M2+Line_Skip+V2+kv
            //Handles Display_2//
            if Scan_Results>=3 then
                :Index=2
                M3=(:Material-Ore-Crystal)
                V3=:Volume
                Display_2=M3+Line_Skip+V3+kv
                if Stack then
                    V3 = V3/Stack_Size*P100
                end
                Display_2=M3+Line_Skip+V3+kv
                if Scan_Results>=4 then
                    M4=(:Material-Ore-Crystal)
                    V4=:Volume
                    if Stack then
                        V4 = V4/Stack_Size*P100
                    end
                    Display_2=Display_2+Line_Skip+M4+Line_Skip+V4+kv
                end
            end
            if not Scan_Results>=3 then
                Display_2=Line_Skip*2+"No Extra Ores"
            end
        end
    end
end
//Displays when Offline//
if :Scan_Button==0 then
    Display_1 = Line_Skip2+"  Offline"
    Display_2 = Display_1
end
//Output onto Display//
:Display_1 = Display_1
:Display_2 = Display_2
//Reset//
:Reset_Results = 1
//Scanner_4_Ores_Standalone code made by carlosChanpio70 / Carlos//